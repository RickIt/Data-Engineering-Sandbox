[2022-08-22 17:04:14,688] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-22T17:04:11.788596+00:00 [queued]>
[2022-08-22 17:04:14,694] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-22T17:04:11.788596+00:00 [queued]>
[2022-08-22 17:04:14,695] {{taskinstance.py:866}} INFO - 
--------------------------------------------------------------------------------
[2022-08-22 17:04:14,695] {{taskinstance.py:867}} INFO - Starting attempt 1 of 1
[2022-08-22 17:04:14,696] {{taskinstance.py:868}} INFO - 
--------------------------------------------------------------------------------
[2022-08-22 17:04:14,703] {{taskinstance.py:887}} INFO - Executing <Task(PythonOperator): get_nifi_processor_task> on 2022-08-22T17:04:11.788596+00:00
[2022-08-22 17:04:14,705] {{standard_task_runner.py:53}} INFO - Started process 1230 to run task
[2022-08-22 17:04:14,770] {{logging_mixin.py:112}} INFO - Running %s on host %s <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-22T17:04:11.788596+00:00 [running]> myairflow
[2022-08-22 17:04:14,776] {{logging_mixin.py:112}} INFO - Testing connection to NiFi...
[2022-08-22 17:04:14,779] {{logging_mixin.py:112}} INFO - [2022-08-22 17:04:14,779] {{base_hook.py:84}} INFO - Using connection to: id: mynifi_connection. Host: http://mynifi, Port: 8080, Schema: None, Login: None, Password: None, extra: None
[2022-08-22 17:04:14,780] {{logging_mixin.py:112}} INFO - Rest endpoint: http://mynifi:8080/nifi-api/processors/c5e2de62-0182-1000-0000-00007faa33b9
[2022-08-22 17:04:14,795] {{logging_mixin.py:112}} INFO - Response: <Response [200]>
[2022-08-22 17:04:14,796] {{logging_mixin.py:112}} INFO - Processor JSON: {'revision': {'version': 0}, 'id': 'c5e2de62-0182-1000-0000-00007faa33b9', 'uri': 'http://mynifi:8080/nifi-api/processors/c5e2de62-0182-1000-0000-00007faa33b9', 'position': {'x': 584.0, 'y': -544.0}, 'permissions': {'canRead': True, 'canWrite': True}, 'bulletins': [], 'component': {'id': 'c5e2de62-0182-1000-0000-00007faa33b9', 'parentGroupId': 'c5c869e5-0182-1000-0000-00003e593f6c', 'position': {'x': 584.0, 'y': -544.0}, 'name': 'ExecuteSQL', 'type': 'org.apache.nifi.processors.standard.ExecuteSQL', 'bundle': {'group': 'org.apache.nifi', 'artifact': 'nifi-standard-nar', 'version': '1.14.0'}, 'state': 'STOPPED', 'style': {}, 'relationships': [{'name': 'failure', 'description': 'SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship', 'autoTerminate': True}, {'name': 'success', 'description': 'Successfully created FlowFile from SQL query result set.', 'autoTerminate': False}], 'supportsParallelProcessing': True, 'supportsEventDriven': True, 'supportsBatching': False, 'persistsState': False, 'restricted': False, 'deprecated': False, 'executionNodeRestricted': False, 'multipleVersionsAvailable': False, 'inputRequirement': 'INPUT_ALLOWED', 'config': {'properties': {'Database Connection Pooling Service': 'c5d16e3f-0182-1000-0000-0000295f91d8', 'sql-pre-query': None, 'SQL select query': 'SELECT 1 as one;', 'sql-post-query': None, 'Max Wait Time': '0 seconds', 'dbf-normalize': 'false', 'dbf-user-logical-types': 'false', 'compression-format': 'NONE', 'dbf-default-precision': '10', 'dbf-default-scale': '0', 'esql-max-rows': '0', 'esql-output-batch-size': '0', 'esql-fetch-size': '0'}, 'descriptors': {'Database Connection Pooling Service': {'name': 'Database Connection Pooling Service', 'displayName': 'Database Connection Pooling Service', 'description': 'The Controller Service that is used to obtain connection to database', 'allowableValues': [{'allowableValue': {'displayName': 'DBCPConnectionPool', 'value': 'c5d16e3f-0182-1000-0000-0000295f91d8'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'identifiesControllerService': 'org.apache.nifi.dbcp.DBCPService', 'identifiesControllerServiceBundle': {'group': 'org.apache.nifi', 'artifact': 'nifi-standard-services-api-nar', 'version': '1.14.0'}, 'dependencies': []}, 'sql-pre-query': {'name': 'sql-pre-query', 'displayName': 'SQL Pre-Query', 'description': "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. It's possible to include semicolons in the statements themselves by escaping them with a backslash ('\\;'). Results/outputs from these queries will be suppressed if there are no errors.", 'required': False, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry and FlowFile Attributes', 'dependencies': []}, 'SQL select query': {'name': 'SQL select query', 'displayName': 'SQL select query', 'description': 'The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.', 'required': False, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry and FlowFile Attributes', 'dependencies': []}, 'sql-post-query': {'name': 'sql-post-query', 'displayName': 'SQL Post-Query', 'description': "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. It's possible to include semicolons in the statements themselves by escaping them with a backslash ('\\;'). Results/outputs from these queries will be suppressed if there are no errors.", 'required': False, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry and FlowFile Attributes', 'dependencies': []}, 'Max Wait Time': {'name': 'Max Wait Time', 'displayName': 'Max Wait Time', 'description': 'The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.', 'defaultValue': '0 seconds', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry and FlowFile Attributes', 'dependencies': []}, 'dbf-normalize': {'name': 'dbf-normalize', 'displayName': 'Normalize Table/Column Names', 'description': 'Whether to change non-Avro-compatible characters in column names to Avro-compatible characters. For example, colons and periods will be changed to underscores in order to build a valid Avro record.', 'defaultValue': 'false', 'allowableValues': [{'allowableValue': {'displayName': 'true', 'value': 'true'}, 'canRead': True}, {'allowableValue': {'displayName': 'false', 'value': 'false'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'dbf-user-logical-types': {'name': 'dbf-user-logical-types', 'displayName': 'Use Avro Logical Types', 'description': "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 'defaultValue': 'false', 'allowableValues': [{'allowableValue': {'displayName': 'true', 'value': 'true'}, 'canRead': True}, {'allowableValue': {'displayName': 'false', 'value': 'false'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'compression-format': {'name': 'compression-format', 'displayName': 'Compression Format', 'description': 'Compression type to use when writing Avro files. Default is None.', 'defaultValue': 'NONE', 'allowableValues': [{'allowableValue': {'displayName': 'BZIP2', 'value': 'BZIP2'}, 'canRead': True}, {'allowableValue': {'displayName': 'DEFLATE', 'value': 'DEFLATE'}, 'canRead': True}, {'allowableValue': {'displayName': 'NONE', 'value': 'NONE'}, 'canRead': True}, {'allowableValue': {'displayName': 'SNAPPY', 'value': 'SNAPPY'}, 'canRead': True}, {'allowableValue': {'displayName': 'LZO', 'value': 'LZO'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'dbf-default-precision': {'name': 'dbf-default-precision', 'displayName': 'Default Decimal Precision', 'description': "When a DECIMAL/NUMBER value is written as a 'decimal' Avro logical type, a specific 'precision' denoting number of available digits is required. Generally, precision is defined by column data type definition or database engines default. However undefined precision (0) can be returned from some database engines. 'Default Decimal Precision' is used when writing those undefined precision numbers.", 'defaultValue': '10', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry and FlowFile Attributes', 'dependencies': []}, 'dbf-default-scale': {'name': 'dbf-default-scale', 'displayName': 'Default Decimal Scale', 'description': "When a DECIMAL/NUMBER value is written as a 'decimal' Avro logical type, a specific 'scale' denoting number of available decimal digits is required. Generally, scale is defined by column data type definition or database engines default. However when undefined precision (0) is returned, scale can also be uncertain with some database engines. 'Default Decimal Scale' is used when writing those undefined numbers. If a value has more decimals than specified scale, then the value will be rounded-up, e.g. 1.53 becomes 2 with scale 0, and 1.5 with scale 1.", 'defaultValue': '0', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry and FlowFile Attributes', 'dependencies': []}, 'esql-max-rows': {'name': 'esql-max-rows', 'displayName': 'Max Rows Per Flow File', 'description': 'The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.', 'defaultValue': '0', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry and FlowFile Attributes', 'dependencies': []}, 'esql-output-batch-size': {'name': 'esql-output-batch-size', 'displayName': 'Output Batch Size', 'description': 'The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.', 'defaultValue': '0', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry and FlowFile Attributes', 'dependencies': []}, 'esql-fetch-size': {'name': 'esql-fetch-size', 'displayName': 'Fetch Size', 'description': 'The number of result rows to be fetched from the result set at a time. This is a hint to the database driver and may not be honored and/or exact. If the value specified is zero, then the hint is ignored.', 'defaultValue': '0', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry and FlowFile Attributes', 'dependencies': []}}, 'schedulingPeriod': '0 sec', 'schedulingStrategy': 'TIMER_DRIVEN', 'executionNode': 'ALL', 'penaltyDuration': '30 sec', 'yieldDuration': '1 sec', 'bulletinLevel': 'WARN', 'runDurationMillis': 0, 'concurrentlySchedulableTaskCount': 1, 'comments': '', 'lossTolerant': False, 'defaultConcurrentTasks': {'TIMER_DRIVEN': '1', 'EVENT_DRIVEN': '0', 'CRON_DRIVEN': '1'}, 'defaultSchedulingPeriod': {'TIMER_DRIVEN': '0 sec', 'CRON_DRIVEN': '* * * * * ?'}}, 'validationErrors': [], 'validationStatus': 'VALID', 'extensionMissing': False}, 'inputRequirement': 'INPUT_ALLOWED', 'status': {'groupId': 'c5c869e5-0182-1000-0000-00003e593f6c', 'id': 'c5e2de62-0182-1000-0000-00007faa33b9', 'name': 'ExecuteSQL', 'runStatus': 'Stopped', 'statsLastRefreshed': '17:04:14 UTC', 'aggregateSnapshot': {'id': 'c5e2de62-0182-1000-0000-00007faa33b9', 'groupId': 'c5c869e5-0182-1000-0000-00003e593f6c', 'name': 'ExecuteSQL', 'type': 'ExecuteSQL', 'runStatus': 'Stopped', 'executionNode': 'ALL', 'bytesRead': 0, 'bytesWritten': 0, 'read': '0 bytes', 'written': '0 bytes', 'flowFilesIn': 0, 'bytesIn': 0, 'input': '0 (0 bytes)', 'flowFilesOut': 0, 'bytesOut': 0, 'output': '0 (0 bytes)', 'taskCount': 0, 'tasksDurationNanos': 0, 'tasks': '0', 'tasksDuration': '00:00:00.000', 'activeThreadCount': 0, 'terminatedThreadCount': 0}}, 'operatePermissions': {'canRead': True, 'canWrite': True}}
[2022-08-22 17:04:14,797] {{logging_mixin.py:112}} INFO - Finished connection-test to NiFi.
[2022-08-22 17:04:14,797] {{python_operator.py:114}} INFO - Done. Returned value was: None
[2022-08-22 17:04:14,800] {{taskinstance.py:1048}} INFO - Marking task as SUCCESS.dag_id=hello_nifi, task_id=get_nifi_processor_task, execution_date=20220822T170411, start_date=20220822T170414, end_date=20220822T170414
[2022-08-22 17:04:24,684] {{logging_mixin.py:112}} INFO - [2022-08-22 17:04:24,684] {{local_task_job.py:103}} INFO - Task exited with return code 0
