[2022-08-22 16:50:02,843] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [queued]>
[2022-08-22 16:50:02,849] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [queued]>
[2022-08-22 16:50:02,850] {{taskinstance.py:866}} INFO - 
--------------------------------------------------------------------------------
[2022-08-22 16:50:02,850] {{taskinstance.py:867}} INFO - Starting attempt 1 of 1
[2022-08-22 16:50:02,851] {{taskinstance.py:868}} INFO - 
--------------------------------------------------------------------------------
[2022-08-22 16:50:02,858] {{taskinstance.py:887}} INFO - Executing <Task(PythonOperator): get_nifi_processor_task> on 2022-08-14T03:00:00+00:00
[2022-08-22 16:50:03,095] {{standard_task_runner.py:53}} INFO - Started process 437 to run task
[2022-08-22 16:50:08,347] {{logging_mixin.py:112}} INFO - Running %s on host %s <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [running]> myairflow
[2022-08-22 16:50:08,369] {{logging_mixin.py:112}} INFO - Testing connection to NiFi...
[2022-08-22 16:50:08,373] {{logging_mixin.py:112}} INFO - [2022-08-22 16:50:08,373] {{base_hook.py:84}} INFO - Using connection to: id: mynifi_connection. Host: http://mynifi, Port: 8080, Schema: None, Login: None, Password: None, extra: None
[2022-08-22 16:50:08,374] {{logging_mixin.py:112}} INFO - Rest endpoint: http://mynifi:8080/nifi-api/processors/1462a26f-0000-0000-0000-35550911fe94
[2022-08-22 16:50:19,152] {{logging_mixin.py:112}} INFO - [2022-08-22 16:50:18,368] {{base_job.py:205}} ERROR - LocalTaskJob heartbeat got an exception
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1246, in _execute_context
    cursor, statement, parameters, context
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 588, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/airflow/jobs/base_job.py", line 172, in heartbeat
    session.merge(self)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2113, in merge
    _resolve_conflict_map=_resolve_conflict_map,
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2186, in _merge
    merged = self.query(mapper.class_).get(key[1])
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 1004, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 1116, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/orm/loading.py", line 284, in load_on_pk_identity
    return q.one()
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3347, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3316, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3389, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/orm/query.py", line 3414, in _execute_and_instances
    result = conn.execute(querycontext.statement, self._params)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 982, in execute
    return meth(self, multiparams, params)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 293, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1101, in _execute_clauseelement
    distilled_params,
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1250, in _execute_context
    e, statement, parameters, cursor, context
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1476, in _handle_dbapi_exception
    util.raise_from_cause(sqlalchemy_exception, exc_info)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 398, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 152, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1246, in _execute_context
    cursor, statement, parameters, context
  File "/usr/local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 588, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) database is locked
[SQL: SELECT job.id AS job_id, job.dag_id AS job_dag_id, job.state AS job_state, job.job_type AS job_job_type, job.start_date AS job_start_date, job.end_date AS job_end_date, job.latest_heartbeat AS job_latest_heartbeat, job.executor_class AS job_executor_class, job.hostname AS job_hostname, job.unixname AS job_unixname 
FROM job 
WHERE job.id = ? AND job.job_type IN (?)]
[parameters: (6, 'LocalTaskJob')]
(Background on this error at: http://sqlalche.me/e/e3q8)
[2022-08-22 16:50:20,961] {{logging_mixin.py:112}} INFO - Response: <Response [404]>
[2022-08-22 16:50:20,962] {{taskinstance.py:1128}} ERROR - Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 966, in _run_raw_task
    result = task_copy.execute(context=context)
  File "/usr/local/lib/python3.7/site-packages/airflow/operators/python_operator.py", line 113, in execute
    return_value = self.execute_callable()
  File "/usr/local/lib/python3.7/site-packages/airflow/operators/python_operator.py", line 118, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/usr/local/airflow/dags/nifi_operator.py", line 29, in get_nifi_processor
    print(f"Processor JSON: {json.loads(response.content)}")
  File "/usr/local/lib/python3.7/json/__init__.py", line 348, in loads
    return _default_decoder.decode(s)
  File "/usr/local/lib/python3.7/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/local/lib/python3.7/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
[2022-08-22 16:50:20,968] {{taskinstance.py:1185}} INFO - Marking task as FAILED.dag_id=hello_nifi, task_id=get_nifi_processor_task, execution_date=20220814T030000, start_date=20220822T165002, end_date=20220822T165020
[2022-08-22 16:50:24,417] {{logging_mixin.py:112}} INFO - [2022-08-22 16:50:24,417] {{local_task_job.py:103}} INFO - Task exited with return code 1
[2022-08-22 17:26:28,158] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [queued]>
[2022-08-22 17:26:28,163] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [queued]>
[2022-08-22 17:26:28,164] {{taskinstance.py:866}} INFO - 
--------------------------------------------------------------------------------
[2022-08-22 17:26:28,164] {{taskinstance.py:867}} INFO - Starting attempt 1 of 1
[2022-08-22 17:26:28,165] {{taskinstance.py:868}} INFO - 
--------------------------------------------------------------------------------
[2022-08-22 17:26:28,171] {{taskinstance.py:887}} INFO - Executing <Task(PythonOperator): get_nifi_processor_task> on 2022-08-14T03:00:00+00:00
[2022-08-22 17:26:28,174] {{standard_task_runner.py:53}} INFO - Started process 2483 to run task
[2022-08-22 17:26:28,207] {{logging_mixin.py:112}} INFO - Running %s on host %s <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [running]> myairflow
[2022-08-22 17:26:28,215] {{logging_mixin.py:112}} INFO - Testing connection to NiFi...
[2022-08-22 17:26:28,217] {{logging_mixin.py:112}} INFO - [2022-08-22 17:26:28,217] {{base_hook.py:84}} INFO - Using connection to: id: mynifi_connection. Host: http://mynifi, Port: 8080, Schema: None, Login: None, Password: None, extra: None
[2022-08-22 17:26:28,218] {{logging_mixin.py:112}} INFO - Rest endpoint: http://mynifi:8080/nifi-api/processors/c5d91e33-0182-1000-ffff-ffffde85851b
[2022-08-22 17:26:28,228] {{logging_mixin.py:112}} INFO - Response: <Response [200]>
[2022-08-22 17:26:28,229] {{logging_mixin.py:112}} INFO - Processor JSON: {'revision': {'version': 0}, 'id': 'c5d91e33-0182-1000-ffff-ffffde85851b', 'uri': 'http://mynifi:8080/nifi-api/processors/c5d91e33-0182-1000-ffff-ffffde85851b', 'position': {'x': 584.0, 'y': -720.0}, 'permissions': {'canRead': True, 'canWrite': True}, 'bulletins': [], 'component': {'id': 'c5d91e33-0182-1000-ffff-ffffde85851b', 'parentGroupId': 'c5c869e5-0182-1000-0000-00003e593f6c', 'position': {'x': 584.0, 'y': -720.0}, 'name': 'GenerateFlowFile', 'type': 'org.apache.nifi.processors.standard.GenerateFlowFile', 'bundle': {'group': 'org.apache.nifi', 'artifact': 'nifi-standard-nar', 'version': '1.14.0'}, 'state': 'STOPPED', 'style': {}, 'relationships': [{'name': 'success', 'description': '', 'autoTerminate': False}], 'supportsParallelProcessing': True, 'supportsEventDriven': False, 'supportsBatching': True, 'persistsState': False, 'restricted': False, 'deprecated': False, 'executionNodeRestricted': False, 'multipleVersionsAvailable': False, 'inputRequirement': 'INPUT_FORBIDDEN', 'config': {'properties': {'File Size': '0B', 'Batch Size': '1', 'Data Format': 'Text', 'Unique FlowFiles': 'false', 'generate-ff-custom-text': None, 'character-set': 'UTF-8', 'mime-type': None}, 'descriptors': {'File Size': {'name': 'File Size', 'displayName': 'File Size', 'description': 'The size of the file that will be used', 'defaultValue': '0B', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'Batch Size': {'name': 'Batch Size', 'displayName': 'Batch Size', 'description': 'The number of FlowFiles to be transferred in each invocation', 'defaultValue': '1', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'Data Format': {'name': 'Data Format', 'displayName': 'Data Format', 'description': 'Specifies whether the data should be Text or Binary', 'defaultValue': 'Text', 'allowableValues': [{'allowableValue': {'displayName': 'Binary', 'value': 'Binary'}, 'canRead': True}, {'allowableValue': {'displayName': 'Text', 'value': 'Text'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'Unique FlowFiles': {'name': 'Unique FlowFiles', 'displayName': 'Unique FlowFiles', 'description': 'If true, each FlowFile that is generated will be unique. If false, a random value will be generated and all FlowFiles will get the same content but this offers much higher throughput', 'defaultValue': 'false', 'allowableValues': [{'allowableValue': {'displayName': 'true', 'value': 'true'}, 'canRead': True}, {'allowableValue': {'displayName': 'false', 'value': 'false'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'generate-ff-custom-text': {'name': 'generate-ff-custom-text', 'displayName': 'Custom Text', 'description': 'If Data Format is text and if Unique FlowFiles is false, then this custom text will be used as content of the generated FlowFiles and the File Size will be ignored. Finally, if Expression Language is used, evaluation will be performed only once per batch of generated FlowFiles', 'required': False, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry Only', 'dependencies': []}, 'character-set': {'name': 'character-set', 'displayName': 'Character Set', 'description': 'Specifies the character set to use when writing the bytes of Custom Text to a flow file.', 'defaultValue': 'UTF-8', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'mime-type': {'name': 'mime-type', 'displayName': 'Mime Type', 'description': 'Specifies the value to set for the "mime.type" attribute.', 'required': False, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}}, 'schedulingPeriod': '60 sec', 'schedulingStrategy': 'TIMER_DRIVEN', 'executionNode': 'PRIMARY', 'penaltyDuration': '30 sec', 'yieldDuration': '1 sec', 'bulletinLevel': 'WARN', 'runDurationMillis': 0, 'concurrentlySchedulableTaskCount': 1, 'comments': '', 'lossTolerant': False, 'defaultConcurrentTasks': {'TIMER_DRIVEN': '1', 'EVENT_DRIVEN': '0', 'CRON_DRIVEN': '1'}, 'defaultSchedulingPeriod': {'TIMER_DRIVEN': '0 sec', 'CRON_DRIVEN': '* * * * * ?'}}, 'validationErrors': [], 'validationStatus': 'VALID', 'extensionMissing': False}, 'inputRequirement': 'INPUT_FORBIDDEN', 'status': {'groupId': 'c5c869e5-0182-1000-0000-00003e593f6c', 'id': 'c5d91e33-0182-1000-ffff-ffffde85851b', 'name': 'GenerateFlowFile', 'runStatus': 'Stopped', 'statsLastRefreshed': '17:26:28 UTC', 'aggregateSnapshot': {'id': 'c5d91e33-0182-1000-ffff-ffffde85851b', 'groupId': 'c5c869e5-0182-1000-0000-00003e593f6c', 'name': 'GenerateFlowFile', 'type': 'GenerateFlowFile', 'runStatus': 'Stopped', 'executionNode': 'PRIMARY', 'bytesRead': 0, 'bytesWritten': 0, 'read': '0 bytes', 'written': '0 bytes', 'flowFilesIn': 0, 'bytesIn': 0, 'input': '0 (0 bytes)', 'flowFilesOut': 0, 'bytesOut': 0, 'output': '0 (0 bytes)', 'taskCount': 0, 'tasksDurationNanos': 0, 'tasks': '0', 'tasksDuration': '00:00:00.000', 'activeThreadCount': 0, 'terminatedThreadCount': 0}}, 'operatePermissions': {'canRead': True, 'canWrite': True}}
[2022-08-22 17:26:28,230] {{logging_mixin.py:112}} INFO - Finished connection-test to NiFi.
[2022-08-22 17:26:28,230] {{python_operator.py:114}} INFO - Done. Returned value was: None
[2022-08-22 17:26:28,233] {{taskinstance.py:1048}} INFO - Marking task as SUCCESS.dag_id=hello_nifi, task_id=get_nifi_processor_task, execution_date=20220814T030000, start_date=20220822T172628, end_date=20220822T172628
[2022-08-22 17:26:38,156] {{logging_mixin.py:112}} INFO - [2022-08-22 17:26:38,156] {{local_task_job.py:103}} INFO - Task exited with return code 0
[2022-08-22 20:30:49,629] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [queued]>
[2022-08-22 20:30:49,637] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [queued]>
[2022-08-22 20:30:49,637] {{taskinstance.py:866}} INFO - 
--------------------------------------------------------------------------------
[2022-08-22 20:30:49,638] {{taskinstance.py:867}} INFO - Starting attempt 1 of 1
[2022-08-22 20:30:49,638] {{taskinstance.py:868}} INFO - 
--------------------------------------------------------------------------------
[2022-08-22 20:30:49,645] {{taskinstance.py:887}} INFO - Executing <Task(PythonOperator): get_nifi_processor_task> on 2022-08-14T03:00:00+00:00
[2022-08-22 20:30:49,648] {{standard_task_runner.py:53}} INFO - Started process 2579 to run task
[2022-08-22 20:30:49,764] {{logging_mixin.py:112}} INFO - Running %s on host %s <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [running]> myairflow
[2022-08-22 20:30:49,773] {{logging_mixin.py:112}} INFO - Testing connection to NiFi...
[2022-08-22 20:30:49,776] {{logging_mixin.py:112}} INFO - [2022-08-22 20:30:49,775] {{base_hook.py:84}} INFO - Using connection to: id: mynifi_connection. Host: http://mynifi, Port: 8080, Schema: None, Login: None, Password: None, extra: None
[2022-08-22 20:30:49,777] {{logging_mixin.py:112}} INFO - Rest endpoint: http://mynifi:8080/nifi-api/processors/c5d91e33-0182-1000-ffff-ffffde85851b
[2022-08-22 20:30:50,782] {{logging_mixin.py:112}} INFO - Response: <Response [200]>
[2022-08-22 20:30:50,783] {{logging_mixin.py:112}} INFO - Processor JSON: {'revision': {'version': 0}, 'id': 'c5d91e33-0182-1000-ffff-ffffde85851b', 'uri': 'http://mynifi:8080/nifi-api/processors/c5d91e33-0182-1000-ffff-ffffde85851b', 'position': {'x': 584.0, 'y': -720.0}, 'permissions': {'canRead': True, 'canWrite': True}, 'bulletins': [], 'component': {'id': 'c5d91e33-0182-1000-ffff-ffffde85851b', 'parentGroupId': 'c5c869e5-0182-1000-0000-00003e593f6c', 'position': {'x': 584.0, 'y': -720.0}, 'name': 'GenerateFlowFile', 'type': 'org.apache.nifi.processors.standard.GenerateFlowFile', 'bundle': {'group': 'org.apache.nifi', 'artifact': 'nifi-standard-nar', 'version': '1.14.0'}, 'state': 'STOPPED', 'style': {}, 'relationships': [{'name': 'success', 'description': '', 'autoTerminate': False}], 'supportsParallelProcessing': True, 'supportsEventDriven': False, 'supportsBatching': True, 'persistsState': False, 'restricted': False, 'deprecated': False, 'executionNodeRestricted': False, 'multipleVersionsAvailable': False, 'inputRequirement': 'INPUT_FORBIDDEN', 'config': {'properties': {'File Size': '0B', 'Batch Size': '1', 'Data Format': 'Text', 'Unique FlowFiles': 'false', 'generate-ff-custom-text': None, 'character-set': 'UTF-8', 'mime-type': None}, 'descriptors': {'File Size': {'name': 'File Size', 'displayName': 'File Size', 'description': 'The size of the file that will be used', 'defaultValue': '0B', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'Batch Size': {'name': 'Batch Size', 'displayName': 'Batch Size', 'description': 'The number of FlowFiles to be transferred in each invocation', 'defaultValue': '1', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'Data Format': {'name': 'Data Format', 'displayName': 'Data Format', 'description': 'Specifies whether the data should be Text or Binary', 'defaultValue': 'Text', 'allowableValues': [{'allowableValue': {'displayName': 'Binary', 'value': 'Binary'}, 'canRead': True}, {'allowableValue': {'displayName': 'Text', 'value': 'Text'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'Unique FlowFiles': {'name': 'Unique FlowFiles', 'displayName': 'Unique FlowFiles', 'description': 'If true, each FlowFile that is generated will be unique. If false, a random value will be generated and all FlowFiles will get the same content but this offers much higher throughput', 'defaultValue': 'false', 'allowableValues': [{'allowableValue': {'displayName': 'true', 'value': 'true'}, 'canRead': True}, {'allowableValue': {'displayName': 'false', 'value': 'false'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'generate-ff-custom-text': {'name': 'generate-ff-custom-text', 'displayName': 'Custom Text', 'description': 'If Data Format is text and if Unique FlowFiles is false, then this custom text will be used as content of the generated FlowFiles and the File Size will be ignored. Finally, if Expression Language is used, evaluation will be performed only once per batch of generated FlowFiles', 'required': False, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry Only', 'dependencies': []}, 'character-set': {'name': 'character-set', 'displayName': 'Character Set', 'description': 'Specifies the character set to use when writing the bytes of Custom Text to a flow file.', 'defaultValue': 'UTF-8', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'mime-type': {'name': 'mime-type', 'displayName': 'Mime Type', 'description': 'Specifies the value to set for the "mime.type" attribute.', 'required': False, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}}, 'schedulingPeriod': '60 sec', 'schedulingStrategy': 'TIMER_DRIVEN', 'executionNode': 'PRIMARY', 'penaltyDuration': '30 sec', 'yieldDuration': '1 sec', 'bulletinLevel': 'WARN', 'runDurationMillis': 0, 'concurrentlySchedulableTaskCount': 1, 'comments': '', 'lossTolerant': False, 'defaultConcurrentTasks': {'TIMER_DRIVEN': '1', 'EVENT_DRIVEN': '0', 'CRON_DRIVEN': '1'}, 'defaultSchedulingPeriod': {'TIMER_DRIVEN': '0 sec', 'CRON_DRIVEN': '* * * * * ?'}}, 'validationErrors': [], 'validationStatus': 'VALID', 'extensionMissing': False}, 'inputRequirement': 'INPUT_FORBIDDEN', 'status': {'groupId': 'c5c869e5-0182-1000-0000-00003e593f6c', 'id': 'c5d91e33-0182-1000-ffff-ffffde85851b', 'name': 'GenerateFlowFile', 'runStatus': 'Stopped', 'statsLastRefreshed': '20:30:50 UTC', 'aggregateSnapshot': {'id': 'c5d91e33-0182-1000-ffff-ffffde85851b', 'groupId': 'c5c869e5-0182-1000-0000-00003e593f6c', 'name': 'GenerateFlowFile', 'type': 'GenerateFlowFile', 'runStatus': 'Stopped', 'executionNode': 'PRIMARY', 'bytesRead': 0, 'bytesWritten': 0, 'read': '0 bytes', 'written': '0 bytes', 'flowFilesIn': 0, 'bytesIn': 0, 'input': '0 (0 bytes)', 'flowFilesOut': 0, 'bytesOut': 0, 'output': '0 (0 bytes)', 'taskCount': 0, 'tasksDurationNanos': 0, 'tasks': '0', 'tasksDuration': '00:00:00.000', 'activeThreadCount': 0, 'terminatedThreadCount': 0}}, 'operatePermissions': {'canRead': True, 'canWrite': True}}
[2022-08-22 20:30:50,784] {{logging_mixin.py:112}} INFO - Finished connection-test to NiFi.
[2022-08-22 20:30:50,784] {{python_operator.py:114}} INFO - Done. Returned value was: None
[2022-08-22 20:30:50,787] {{taskinstance.py:1048}} INFO - Marking task as SUCCESS.dag_id=hello_nifi, task_id=get_nifi_processor_task, execution_date=20220814T030000, start_date=20220822T203049, end_date=20220822T203050
[2022-08-22 20:30:59,625] {{logging_mixin.py:112}} INFO - [2022-08-22 20:30:59,625] {{local_task_job.py:103}} INFO - Task exited with return code 0
[2022-08-24 21:12:30,010] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [queued]>
[2022-08-24 21:12:30,017] {{taskinstance.py:655}} INFO - Dependencies all met for <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [queued]>
[2022-08-24 21:12:30,017] {{taskinstance.py:866}} INFO - 
--------------------------------------------------------------------------------
[2022-08-24 21:12:30,018] {{taskinstance.py:867}} INFO - Starting attempt 1 of 1
[2022-08-24 21:12:30,018] {{taskinstance.py:868}} INFO - 
--------------------------------------------------------------------------------
[2022-08-24 21:12:30,025] {{taskinstance.py:887}} INFO - Executing <Task(PythonOperator): get_nifi_processor_task> on 2022-08-14T03:00:00+00:00
[2022-08-24 21:12:30,028] {{standard_task_runner.py:53}} INFO - Started process 12118 to run task
[2022-08-24 21:12:30,059] {{logging_mixin.py:112}} INFO - Running %s on host %s <TaskInstance: hello_nifi.get_nifi_processor_task 2022-08-14T03:00:00+00:00 [running]> myairflow
[2022-08-24 21:12:30,069] {{logging_mixin.py:112}} INFO - Testing connection to NiFi...
[2022-08-24 21:12:30,072] {{logging_mixin.py:112}} INFO - [2022-08-24 21:12:30,071] {{base_hook.py:84}} INFO - Using connection to: id: mynifi_connection. Host: http://mynifi, Port: 8080, Schema: None, Login: None, Password: None, extra: None
[2022-08-24 21:12:30,072] {{logging_mixin.py:112}} INFO - Rest endpoint: http://mynifi:8080/nifi-api/processors/d195834a-0182-1000-0000-0000141b903d
[2022-08-24 21:12:30,088] {{logging_mixin.py:112}} INFO - Response: <Response [200]>
[2022-08-24 21:12:30,088] {{logging_mixin.py:112}} INFO - Processor JSON: {'revision': {'clientId': 'd19b1971-0182-1000-59b0-a92e1a6356fd', 'version': 4}, 'id': 'd195834a-0182-1000-0000-0000141b903d', 'uri': 'http://mynifi:8080/nifi-api/processors/d195834a-0182-1000-0000-0000141b903d', 'position': {'x': 395.0, 'y': 93.0}, 'permissions': {'canRead': True, 'canWrite': True}, 'bulletins': [], 'component': {'id': 'd195834a-0182-1000-0000-0000141b903d', 'versionedComponentId': '524f6a3c-1baa-30b8-8ee2-712b64879f5b', 'parentGroupId': 'd18921f3-0182-1000-0000-00006d2f44ba', 'position': {'x': 395.0, 'y': 93.0}, 'name': 'GenerateFlowFile', 'type': 'org.apache.nifi.processors.standard.GenerateFlowFile', 'bundle': {'group': 'org.apache.nifi', 'artifact': 'nifi-standard-nar', 'version': '1.14.0'}, 'state': 'STOPPED', 'style': {}, 'relationships': [{'name': 'success', 'description': '', 'autoTerminate': False}], 'supportsParallelProcessing': True, 'supportsEventDriven': False, 'supportsBatching': True, 'persistsState': False, 'restricted': False, 'deprecated': False, 'executionNodeRestricted': False, 'multipleVersionsAvailable': False, 'inputRequirement': 'INPUT_FORBIDDEN', 'config': {'properties': {'File Size': '0B', 'Batch Size': '1', 'Data Format': 'Text', 'Unique FlowFiles': 'false', 'generate-ff-custom-text': None, 'character-set': 'UTF-8', 'mime-type': None}, 'descriptors': {'File Size': {'name': 'File Size', 'displayName': 'File Size', 'description': 'The size of the file that will be used', 'defaultValue': '0B', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'Batch Size': {'name': 'Batch Size', 'displayName': 'Batch Size', 'description': 'The number of FlowFiles to be transferred in each invocation', 'defaultValue': '1', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'Data Format': {'name': 'Data Format', 'displayName': 'Data Format', 'description': 'Specifies whether the data should be Text or Binary', 'defaultValue': 'Text', 'allowableValues': [{'allowableValue': {'displayName': 'Binary', 'value': 'Binary'}, 'canRead': True}, {'allowableValue': {'displayName': 'Text', 'value': 'Text'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'Unique FlowFiles': {'name': 'Unique FlowFiles', 'displayName': 'Unique FlowFiles', 'description': 'If true, each FlowFile that is generated will be unique. If false, a random value will be generated and all FlowFiles will get the same content but this offers much higher throughput', 'defaultValue': 'false', 'allowableValues': [{'allowableValue': {'displayName': 'true', 'value': 'true'}, 'canRead': True}, {'allowableValue': {'displayName': 'false', 'value': 'false'}, 'canRead': True}], 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'generate-ff-custom-text': {'name': 'generate-ff-custom-text', 'displayName': 'Custom Text', 'description': 'If Data Format is text and if Unique FlowFiles is false, then this custom text will be used as content of the generated FlowFiles and the File Size will be ignored. Finally, if Expression Language is used, evaluation will be performed only once per batch of generated FlowFiles', 'required': False, 'sensitive': False, 'dynamic': False, 'supportsEl': True, 'expressionLanguageScope': 'Variable Registry Only', 'dependencies': []}, 'character-set': {'name': 'character-set', 'displayName': 'Character Set', 'description': 'Specifies the character set to use when writing the bytes of Custom Text to a flow file.', 'defaultValue': 'UTF-8', 'required': True, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}, 'mime-type': {'name': 'mime-type', 'displayName': 'Mime Type', 'description': 'Specifies the value to set for the "mime.type" attribute.', 'required': False, 'sensitive': False, 'dynamic': False, 'supportsEl': False, 'expressionLanguageScope': 'Not Supported', 'dependencies': []}}, 'schedulingPeriod': '60 sec', 'schedulingStrategy': 'TIMER_DRIVEN', 'executionNode': 'PRIMARY', 'penaltyDuration': '30 sec', 'yieldDuration': '1 sec', 'bulletinLevel': 'WARN', 'runDurationMillis': 0, 'concurrentlySchedulableTaskCount': 1, 'comments': '', 'lossTolerant': False, 'defaultConcurrentTasks': {'TIMER_DRIVEN': '1', 'EVENT_DRIVEN': '0', 'CRON_DRIVEN': '1'}, 'defaultSchedulingPeriod': {'TIMER_DRIVEN': '0 sec', 'CRON_DRIVEN': '* * * * * ?'}}, 'validationErrors': [], 'validationStatus': 'VALID', 'extensionMissing': False}, 'inputRequirement': 'INPUT_FORBIDDEN', 'status': {'groupId': 'd18921f3-0182-1000-0000-00006d2f44ba', 'id': 'd195834a-0182-1000-0000-0000141b903d', 'name': 'GenerateFlowFile', 'runStatus': 'Stopped', 'statsLastRefreshed': '21:12:30 UTC', 'aggregateSnapshot': {'id': 'd195834a-0182-1000-0000-0000141b903d', 'groupId': 'd18921f3-0182-1000-0000-00006d2f44ba', 'name': 'GenerateFlowFile', 'type': 'GenerateFlowFile', 'runStatus': 'Stopped', 'executionNode': 'PRIMARY', 'bytesRead': 0, 'bytesWritten': 0, 'read': '0 bytes', 'written': '0 bytes', 'flowFilesIn': 0, 'bytesIn': 0, 'input': '0 (0 bytes)', 'flowFilesOut': 0, 'bytesOut': 0, 'output': '0 (0 bytes)', 'taskCount': 0, 'tasksDurationNanos': 0, 'tasks': '0', 'tasksDuration': '00:00:00.000', 'activeThreadCount': 0, 'terminatedThreadCount': 0}}, 'operatePermissions': {'canRead': True, 'canWrite': True}}
[2022-08-24 21:12:30,091] {{logging_mixin.py:112}} INFO - Finished connection-test to NiFi.
[2022-08-24 21:12:30,091] {{python_operator.py:114}} INFO - Done. Returned value was: None
[2022-08-24 21:12:30,094] {{taskinstance.py:1048}} INFO - Marking task as SUCCESS.dag_id=hello_nifi, task_id=get_nifi_processor_task, execution_date=20220814T030000, start_date=20220824T211230, end_date=20220824T211230
[2022-08-24 21:12:40,005] {{logging_mixin.py:112}} INFO - [2022-08-24 21:12:40,005] {{local_task_job.py:103}} INFO - Task exited with return code 0
